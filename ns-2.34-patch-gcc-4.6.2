diff -ur ./ns-2.34/linkstate/ls.h ../old/ns-allinone-2.34/ns-2.34/linkstate/ls.h
--- ./ns-2.34/linkstate/ls.h	2012-05-02 17:03:17.809474115 +0200
+++ ../old/ns-allinone-2.34/ns-2.34/linkstate/ls.h	2009-06-14 19:35:43.000000000 +0200
@@ -134,7 +134,7 @@
 		return ib.second ? ib.first : baseMap::end();
 	}
 
-	void eraseAll() { this->erase(baseMap::begin(), baseMap::end()); }
+	void eraseAll() { erase(baseMap::begin(), baseMap::end()); }
 	T* findPtr(Key key) {
 		iterator it = baseMap::find(key);
 		return (it == baseMap::end()) ? (T *)NULL : &((*it).second);
diff -ur ./ns-2.34/mac/mac-802_11Ext.h ../old/ns-allinone-2.34/ns-2.34/mac/mac-802_11Ext.h
--- ./ns-2.34/mac/mac-802_11Ext.h	2012-05-02 16:55:09.188787869 +0200
+++ ../old/ns-allinone-2.34/ns-2.34/mac/mac-802_11Ext.h	2009-06-14 19:35:44.000000000 +0200
@@ -57,7 +57,6 @@
  
 #ifndef ns_mac_80211Ext_h
 #define ns_mac_80211Ext_h
-#include <cstddef>
 #include "marshall.h"
 #include "timer-handler.h"
 #define GET_ETHER_TYPE(x)		GET2BYTE((x))
Only in ./ns-2.34: Makefile
diff -ur ./ns-2.34/mobile/nakagami.cc ../old/ns-allinone-2.34/ns-2.34/mobile/nakagami.cc
--- ./ns-2.34/mobile/nakagami.cc	2012-05-02 16:58:23.567734828 +0200
+++ ../old/ns-allinone-2.34/ns-2.34/mobile/nakagami.cc	2009-06-14 19:35:45.000000000 +0200
@@ -180,9 +180,9 @@
  		double resultPower;
  		
         if (int_m == m) {
- 			resultPower = ErlangRandomVariable(Pr/m, int_m).value();
+ 			resultPower = ErlangRandomVariable::ErlangRandomVariable(Pr/m, int_m).value();
  		} else {
- 			resultPower = GammaRandomVariable(m, Pr/m).value();
+ 			resultPower = GammaRandomVariable::GammaRandomVariable(m, Pr/m).value();
  		}
  		return resultPower;
 	}
diff -ur ./ns-2.34/tools/ranvar.cc ../old/ns-allinone-2.34/ns-2.34/tools/ranvar.cc
--- ./ns-2.34/tools/ranvar.cc	2012-05-02 16:48:15.381029658 +0200
+++ ../old/ns-allinone-2.34/ns-2.34/tools/ranvar.cc	2009-06-14 19:35:44.000000000 +0200
@@ -216,7 +216,7 @@
 	// ACM Transactions on mathematical software, Vol. 26, No. 3, Sept. 2000
 	if (alpha_ < 1) {
 		double u = rng_->uniform(1.0);
-		return GammaRandomVariable(1.0 + alpha_, beta_).value() * pow (u, 1.0 / alpha_);
+		return GammaRandomVariable::GammaRandomVariable(1.0 + alpha_, beta_).value() * pow (u, 1.0 / alpha_);
 	}
 	
 	double x, v, u;
